<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  simple.vert
//  vertex shader
//
//  Created by Andrzej Kapolka on 9/15/14.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Inputs.slh@>
<@include gpu/Color.slh@>

// the interpolated normal
out vec3 _normal;
out vec3 _modelNormal;
out vec4 _color;
out vec2 _texCoord0;
out vec4 _position;

//PROCEDURAL_COMMON_BLOCK

<@include gpu/Transform.slh@>
<$declareStandardObjectTransform()$>

//PROCEDURAL_BLOCK

void main(void) {

    vec4 position = inPosition;
    vec4 color = inColor;
    vec2 texCoord0 = inTexCoord0.st;
    vec3 modelNormal = inNormal.xyz;

#ifdef PROCEDURAL
    getProceduralVertex(position, color, texCoord0, modelNormal);
#endif

    _color = colorToLinearRGBA(color);
    _position = position;
    _texCoord0 = texCoord0;
    _modelNormal = modelNormal;

    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToClipPos(cam, obj, position, gl_Position)$>
    <$transformModelToWorldDir(cam, obj, modelNormal.xyz, _normal)$>
}
